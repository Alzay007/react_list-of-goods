{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlpabet","setState","ALPABET","sortByLength","LENGTH","reverseGoods","resetGoods","this","visibleGoods","sort","good1","good2","localeCompare","length","reverse","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,SAAS,CACZH,SAAUL,EAASS,WARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,aAAe,WACb,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,WAAa,WACX,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KA3BlB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAY,UAAOd,GAmBzB,OAjBAc,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQb,GACN,KAAKL,EAASS,QACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKlB,EAASW,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAIThB,GACFW,EAAaM,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYnB,IAAaL,EAASS,UAGtCgB,QAAUX,KAAKP,cATjB,iCAcA,wBACEgB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYnB,IAAaL,EAASW,SAGtCc,QAAUX,KAAKJ,aATjB,4BAcA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAA2B,IAAfpB,IAGhBqB,QAAUX,KAAKF,aATjB,sBAcEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAAUX,KAAKD,WAHjB,sBAUJ,6BACGE,EAAaW,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAhHnB,GAAyBC,aC1BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bebfebea.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlpabet = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={(this.sortByAlpabet)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={(this.sortByLength)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': isReversed !== true,\n              },\n            )}\n            onClick={(this.reverseGoods)}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={(this.resetGoods)}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}